
---
apiVersion: app.redislabs.com/v1
kind: RedisEnterpriseCluster
metadata:
 name: redis-1
 namespace: service-instances
spec:
  nodes: 1
  redisEnterpriseNodeResources:
    limits:
      cpu: "2000m"
      memory: 4Gi
    requests:
      cpu: "100m"
      memory: 1Gi
  persistentSpec:
   enabled: true
   volumeSize: 10Gi

---
apiVersion: app.redislabs.com/v1alpha1
kind: RedisEnterpriseDatabase
metadata:
  name: redis-1-db
  namespace: service-instances
spec:
  memorySize: 1GB
  redisEnterpriseCluster:
    name: redis-1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-enterprise-cluster-secret-template-reader
  namespace: service-instances
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: redis-enterprise-cluster-secret-template-reader
  namespace: service-instances
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: redis-enterprise-cluster-secret-template-reader
  namespace: service-instances
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redis-enterprise-cluster-secret-template-reader
subjects:
- kind: ServiceAccount
  name: redis-enterprise-cluster-secret-template-reader

---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretTemplate
metadata:
 name: redis-1-redis-secret
 namespace: service-instances
spec:
 serviceAccountName: redis-enterprise-cluster-secret-template-reader
 inputResources:
 - name: redis-service
   ref:
    apiVersion: v1
    kind: Service
    name: redis-1-db
 - name: creds
   ref:
     apiVersion: v1
     kind: Secret
     name: redb-redis-1-db
 template:
  metadata:
   labels:
     app.kubernetes.io/component: redis
     app.kubernetes.io/instance: redis-1
     services.apps.tanzu.vmware.com/class: redis-enterprise-cluster
  stringData:
    host: "$(.redis-service.metadata.name).$(.redis-service.metadata.namespace).svc.cluster.local"
    provider: redis_enterprise
    type: redis
  data:
    password: $(.creds.data.password)
    port: $(.creds.data.port)